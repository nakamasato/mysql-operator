{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>This is a go-based Kubernetes operator built with operator-sdk, which manages MySQL databases, schema, users, permissions in existing MySQL servers. This operator DOES NOT manage MySQL cluster like other MySQL operators such as vitess, mysql/mysql-operator.</p>"},{"location":"#motivation","title":"Motivation","text":"<p>Reduce human operations:</p> <ol> <li>User management: When creating a MySQL user for an application running on Kubernetes, it's necessary to create a MySQL user and create a Secret manually or with a script, which can be replaced with a Kubernetes operator. The initial idea is from KafkaUser and KafkaTopic in Strimzi Kafka Operator. With a custom resource for MySQL user, we can manage MySQL users with Kubernetes manifest files as a part of dependent application.     Benefits from such a custom resource and operator:<ol> <li>Kubernetes manifest files for an application and its dependent resources (including MySQL user) can be managed together with Kustomize or Helm chart, with which we can easily duplicate whole environment.</li> <li>There's no chance to require someone to check the raw password as it's stored directly to Secret by the operator, and read by the dependent application from the Secret.</li> </ol> </li> <li>Database migration: Reduce manual operations but keep changelog. When any schema migration or database operation is required, we needed a human operation, which has potential risk of human errors that should be avoided. With a Kubernetes operator, we can execute each database operation in the standard way with traceable changlog.</li> </ol>"},{"location":"#custom-resources","title":"Custom Resources","text":"<ul> <li><code>MySQL</code> - MySQL cluster or server.</li> <li><code>MySQLUser</code> - MySQL user.</li> <li><code>MySQLDB</code> - MySQL database.</li> </ul>"},{"location":"#contents","title":"Contents","text":"<ul> <li>Developer Guide<ul> <li>Reconciliation</li> <li>API Resource</li> <li>Debug</li> <li>Helm</li> <li>Testing</li> <li>Tools</li> </ul> </li> <li>Usage<ul> <li>Run on GKE and manage Cloud SQL (MySQL) with GCP SecretManager</li> <li>Schema Migration</li> <li>Install with Helm</li> </ul> </li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Install CRD     <pre><code>kubectl apply -k https://github.com/nakamasato/mysql-operator/config/install\n</code></pre></li> <li> <p>(Optional) prepare MySQL.     <pre><code>kubectl apply -k https://github.com/nakamasato/mysql-operator/config/mysql\n</code></pre></p> </li> <li> <p>Configure MySQL credentials for the operator using the custom resources <code>MySQL</code>.</p> <p><code>mysql.yaml</code> credentials to connect to the MySQL: This user is used to manage MySQL users and databases, which is ususally an admin user.</p> <pre><code>apiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQL\nmetadata:\n  name: mysql-sample\nspec:\n  host: mysql.default # need to include namespace if you use Kubernetes Service as an endpoint.\n  adminUser:\n    name: root\n    type: raw\n  adminPassword:\n    name: password\n    type: raw\n</code></pre> <p>If you installed mysql sample with the command above, the password for the root user is <code>password</code>. You can apply <code>MySQL</code> with the following command.</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/nakamasato/mysql-operator/main/config/samples-on-k8s/mysql_v1alpha1_mysql.yaml\n</code></pre> <p>You can check the <code>MySQL</code> object and status:</p> <pre><code>kubectl get mysql\nNAME           HOST            ADMINUSER   CONNECTED   USERCOUNT   DBCOUNT   REASON\nmysql-sample   mysql.default   root        true        0           0         Ping succeded and updated MySQLClients\n</code></pre> </li> <li> <p>Create a new MySQL user with custom resource <code>MySQLUser</code>.</p> <p><code>mysqluser.yaml</code>: MySQL user</p> <pre><code>apiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQLUser\nmetadata:\n  name: sample-user\nspec:\n  mysqlName: mysql-sample\n  host: '%'\n</code></pre> <ol> <li> <p>Create a new MySQL user <code>sample-user</code></p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/nakamasato/mysql-operator/main/config/samples-on-k8s/mysql_v1alpha1_mysqluser.yaml\n</code></pre> </li> <li> <p>You can check the status of <code>MySQLUser</code> object</p> <pre><code>kubectl get mysqluser\nNAME         MYSQLUSER   SECRET   PHASE   REASON\nsample-user  true        true     Ready   Both secret and mysql user are successfully created.\n</code></pre> </li> <li> <p>You can also confirm the Secret for the new MySQL user is created.</p> <pre><code>kubectl get secret\nNAME                            TYPE     DATA   AGE\nmysql-mysql-sample-sample-user  Opaque   1      4m3s\n</code></pre> </li> <li> <p>Connect to MySQL with the newly created user</p> <pre><code>kubectl exec -it $(kubectl get po | grep mysql | head -1 | awk '{print $1}') -- mysql -usample-user -p$(kubectl get secret mysql-mysql-sample-sample-user -o jsonpath='{.data.password}' | base64 --decode)\n</code></pre> </li> </ol> </li> <li> <p>Create a new MySQL database with custom resource <code>MySQLDB</code>.</p> <p><code>mysqldb.yaml</code>: MySQL database</p> <pre><code>apiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQLDB\nmetadata:\n  name: sample-db # this is not a name for MySQL database but just a Kubernetes object name\nspec:\n  dbName: sample_db # this is MySQL database name\n  mysqlName: mysql-sample\n</code></pre> <pre><code>kubectl apply -f https://raw.githubusercontent.com/nakamasato/mysql-operator/main/config/samples-on-k8s/mysql_v1alpha1_mysqldb.yaml\n</code></pre> <pre><code>kubectl get mysqldb\nNAME        PHASE   REASON                          SCHEMAMIGRATION\nsample-db   Ready   Database successfully created   {\"dirty\":false,\"version\":0}\n</code></pre> </li> <li> <p>Grant all priviledges of the created db (<code>sample_db</code>) to the create user (<code>sample-user</code>) (TODO: Currently there's no way to manage user permissions with operator.)</p> <pre><code>kubectl exec -it $(kubectl get po | grep mysql | head -1 | awk '{print $1}') -- mysql -uroot -ppassword\n</code></pre> <pre><code>GRANT ALL PRIVILEGES ON sample_db.* TO 'sample-user'@'%';\n</code></pre> <p>Now the created user got the permission to use <code>sample_db</code>.</p> <pre><code>ubectl exec -it $(kubectl get po | grep mysql | head -1 | awk '{print $1}') -- mysql -usample-user -p$(kubectl get secret mysql-mysql-sample-sample-user -o jsonpath='{.data.password}' | base64 --decode)\n</code></pre> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| performance_schema |\n| sample_db          |\n+--------------------+\n3 rows in set (0.00 sec)\n</code></pre> </li> <li> <p>Delete custom resources (<code>MySQL</code>, <code>MySQLUser</code>, <code>MySQLDB</code>).     Example:     <pre><code>kubectl delete -k https://github.com/nakamasato/mysql-operator/config/samples-on-k8s\n</code></pre></p> <p>NOTICE <p>custom resources might get stuck if MySQL is deleted before (to be improved). \u2192 Remove finalizers to forcifully delete the stuck objects: <pre><code>kubectl patch mysqluser &lt;resource_name&gt; -p '{\"metadata\":{\"finalizers\": []}}' --type=merge\n</code></pre> <pre><code>kubectl patch mysql &lt;resource_name&gt; -p '{\"metadata\":{\"finalizers\": []}}' --type=merge\n</code></pre></p> <pre><code>kubectl patch mysqldb &lt;resource_name&gt; -p '{\"metadata\":{\"finalizers\": []}}' --type=merge\n</code></pre> <li> <p>(Optional) Delete MySQL     <pre><code>kubectl delete -k https://github.com/nakamasato/mysql-operator/config/mysql\n</code></pre></p> </li> <li>Uninstall <code>mysql-operator</code> <pre><code>kubectl delete -k https://github.com/nakamasato/mysql-operator/config/install\n</code></pre></li>"},{"location":"developer-guide/api-resources/","title":"API resources","text":"<ul> <li>API resources are defined in <code>api/&lt;version&gt;/xxx_types.go</code>.</li> <li>Manifest file for <code>CustomResourceDefinition</code> is generated by <code>make manifests</code> (<code>controller-gen</code>).</li> <li><code>DeepCopy</code> is generated by <code>make generate</code> (<code>controller-gen</code>).</li> </ul>"},{"location":"developer-guide/api-resources/#mysql","title":"<code>MySQL</code>","text":"<p>MySQL represents a MySQL cluster with root acess.</p> <ul> <li>Spec<ul> <li>AdminUser</li> <li>AdminPassword</li> </ul> </li> <li>Status<ul> <li>UserCount</li> <li>DBCount</li> </ul> </li> </ul> <p>TODO:</p> <ul> <li> Credential management. (#190 GCP SecretManager)</li> <li> <p> Change to <code>ClusterResource</code> so <code>MySQLUser</code> in any namespace can reference it. (No need of changing <code>OwnerReference</code>)</p> <p>Namespaced dependents can specify cluster-scoped or namespaced owners. Ref: Owner references in object specifications</p> </li> </ul>"},{"location":"developer-guide/api-resources/#mysqluser","title":"<code>MySQLUser</code>","text":"<p>When <code>MySQLUser</code> is created/edited/deleted, MySQL user will be created/edited/deleted by the controller.</p> <ul> <li>Spec<ul> <li>MysqlName: The name of <code>MySQL</code> object</li> <li>Host: MySQL user's host</li> </ul> </li> <li>Status<ul> <li>Conditions</li> <li>Phase: <code>Ready</code> if Secret and MySQL user are created, otherwise <code>NotReady</code></li> <li>Reason: Reason for <code>NotReady</code></li> </ul> </li> </ul>"},{"location":"developer-guide/api-resources/#mysqldb","title":"<code>MySQLDB</code>","text":"<p>You can create MySQL database with this custom resource.</p> <ul> <li>Spec<ul> <li>DBName: The database name. (The reason for not directly using the object's name is becase some object name can't be used for database name)</li> <li>MysqlName: The name of <code>MySQL</code> object</li> </ul> </li> </ul> <p>ToDo:</p> <ul> <li> Validate <code>DBName</code></li> </ul>"},{"location":"developer-guide/debug/","title":"Debug","text":""},{"location":"developer-guide/debug/#errors","title":"Errors","text":""},{"location":"developer-guide/debug/#build-failed-cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-check-if-docker-is-running","title":"Build Failed. Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Check if docker is running.","text":"<pre><code>sudo ln -s \"$HOME/.docker/run/docker.sock\" /var/run/docker.sock\n</code></pre> <p>or Check your docker context and use the default one (this didn't work)</p> <pre><code>docker context ls\nNAME                TYPE                DESCRIPTION                               DOCKER ENDPOINT                                KUBERNETES ENDPOINT   ORCHESTRATOR\ndefault             moby                Current DOCKER_HOST based configuration   unix:///var/run/docker.sock\ndesktop-linux *     moby                Docker Desktop                            unix:///Users/yourname/.docker/run/docker.sock\n</code></pre> <pre><code>docker context use default\n</code></pre> <p>Ref: 1. https://github.com/GoogleContainerTools/skaffold/issues/7985 1. https://github.com/docker/for-mac/issues/6529 1. https://stackoverflow.com/questions/74170319/skaffold-cannot-connect-to-the-docker-daemon-on-docker-desktop-for-macos</p>"},{"location":"developer-guide/debug/#server-rejected-event","title":"Server rejected event","text":"<p>Fails:</p> <pre><code>[manager] 2021-12-25T04:16:33.293Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:16:33.293Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:16:33.293Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:16:33.305Z      ERROR   controller-runtime.manager.controller.mysqluser Failed to connect to MySQL.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"mysqlName\": \"mysql-sample\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).reconcileHandler\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:298\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-25T04:16:33.306Z      DEBUG   controller-runtime.manager.events       Warning {\"object\": {\"kind\":\"MySQLUser\",\"namespace\":\"default\",\"name\":\"nakamasato\",\"uid\":\"947ff02f-1950-4f37-9dcd-0e2d0d11db84\",\"apiVersion\":\"mysql.nakamasato.com/v1alpha1\",\"resourceVersion\":\"572560\"}, \"reason\": \"ProcessingError\", \"message\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] E1225 04:16:33.315173       1 event.go:264] Server rejected event '&amp;v1.Event{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"nakamasato.16c3e45a191f6bd4\", GenerateName:\"\", Namespace:\"default\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:\"MySQLUser\", Namespace:\"default\", Name:\"nakamasato\", UID:\"947ff02f-1950-4f37-9dcd-0e2d0d11db84\", APIVersion:\"mysql.nakamasato.com/v1alpha1\", ResourceVersion:\"572560\", FieldPath:\"\"}, Reason:\"ProcessingError\", Message:\"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\", Source:v1.EventSource{Component:\"mysqluser_controller\", Host:\"\"}, FirstTimestamp:v1.Time{Time:time.Time{wall:0xc069c4a1366643d4, ext:64615291501, loc:(*time.Location)(0x25472e0)}}, LastTimestamp:v1.Time{Time:time.Time{wall:0xc069c4a8523b024c, ext:93043659801, loc:(*time.Location)(0x25472e0)}}, Count:15, Type:\"Warning\", EventTime:v1.MicroTime{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, Series:(*v1.EventSeries)(nil), Action:\"\", Related:(*v1.ObjectReference)(nil), ReportingController:\"\", ReportingInstance:\"\"}': 'events \"nakamasato.16c3e45a191f6bd4\" is forbidden: User \"system:serviceaccount:mysql-operator-system:mysql-operator-controller-manager\" cannot patch resource \"events\" in API group \"\" in the namespace \"default\"' (will not retry!)\n[manager] 2021-12-25T04:16:33.329Z      ERROR   controller-runtime.manager.controller.mysqluser Reconciler error     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-25T04:16:33.329Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:16:33.330Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:16:33.330Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:16:33.360Z      ERROR   controller-runtime.manager.controller.mysqluser Failed to connect to MySQL.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"mysqlName\": \"mysql-sample\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).reconcileHandler\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:298\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-25T04:16:33.361Z      DEBUG   controller-runtime.manager.events       Warning {\"object\": {\"kind\":\"MySQLUser\",\"namespace\":\"default\",\"name\":\"nakamasato\",\"uid\":\"947ff02f-1950-4f37-9dcd-0e2d0d11db84\",\"apiVersion\":\"mysql.nakamasato.com/v1alpha1\",\"resourceVersion\":\"572612\"}, \"reason\": \"ProcessingError\", \"message\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] E1225 04:16:33.366899       1 event.go:264] Server rejected event '&amp;v1.Event{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"nakamasato.16c3e45a191f6bd4\", GenerateName:\"\", Namespace:\"default\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:\"MySQLUser\", Namespace:\"default\", Name:\"nakamasato\", UID:\"947ff02f-1950-4f37-9dcd-0e2d0d11db84\", APIVersion:\"mysql.nakamasato.com/v1alpha1\", ResourceVersion:\"572612\", FieldPath:\"\"}, Reason:\"ProcessingError\", Message:\"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\", Source:v1.EventSource{Component:\"mysqluser_controller\", Host:\"\"}, FirstTimestamp:v1.Time{Time:time.Time{wall:0xc069c4a1366643d4, ext:64615291501, loc:(*time.Location)(0x25472e0)}}, LastTimestamp:v1.Time{Time:time.Time{wall:0xc069c4a855820c0c, ext:93098644501, loc:(*time.Location)(0x25472e0)}}, Count:16, Type:\"Warning\", EventTime:v1.MicroTime{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, Series:(*v1.EventSeries)(nil), Action:\"\", Related:(*v1.ObjectReference)(nil), ReportingController:\"\", ReportingInstance:\"\"}': 'events \"nakamasato.16c3e45a191f6bd4\" is forbidden: User \"system:serviceaccount:mysql-operator-system:mysql-operator-controller-manager\" cannot patch resource \"events\" in API group \"\" in the namespace \"default\"' (will not retry!)\n[manager] 2021-12-25T04:16:33.371Z      ERROR   controller-runtime.manager.controller.mysqluser Reconciler error     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n</code></pre> <p>Recovers next reconciliation loop (1min30seconds after the previous loop):</p> <pre><code>[manager] 2021-12-25T04:17:55.179Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.179Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.179Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.183Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created mysqlClient      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.294Z      INFO    controller-runtime.manager.controller.mysqluser Generate new password for Secret      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"secretName\": \"mysql-mysql-sample-nakamasato\"}\n[manager] 2021-12-25T04:17:55.294Z      INFO    controller-runtime.manager.controller.mysqluser Create MySQL user if not.     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.297Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created Secret.  {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.320Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.320Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.320Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.329Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created mysqlClient      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.329Z      INFO    controller-runtime.manager.controller.mysqluser Create MySQL user if not.     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.367Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created Secret.  {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.376Z      ERROR   util.api        unable to update status {\"error\": \"Operation cannot be fulfilled on mysqlusers.mysql.nakamasato.com \\\"nakamasato\\\": the object has been modified; please apply your changes to the latest version and try again\"}\n[manager] github.com/redhat-cop/operator-utils/pkg/util.(*ReconcilerBase).ManageSuccessWithRequeue\n[manager]       /go/pkg/mod/github.com/redhat-cop/operator-utils@v1.2.2/pkg/util/reconciler.go:423\n[manager] github.com/redhat-cop/operator-utils/pkg/util.(*ReconcilerBase).ManageSuccess\n[manager]       /go/pkg/mod/github.com/redhat-cop/operator-utils@v1.2.2/pkg/util/reconciler.go:434\n[manager] github.com/nakamasato/mysql-operator/controllers.(*MySQLUserReconciler).Reconcile\n[manager]       /workspace/controllers/mysqluser_controller.go:184\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).reconcileHandler\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:298\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-25T04:17:55.379Z      ERROR   controller-runtime.manager.controller.mysqluser Reconciler error     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"error\": \"Operation cannot be fulfilled on mysqlusers.mysql.nakamasato.com \\\"nakamasato\\\": the object has been modified; please apply your changes to the latest version and try again\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-25T04:17:55.379Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.379Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.379Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.385Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created mysqlClient      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.385Z      INFO    controller-runtime.manager.controller.mysqluser Create MySQL user if not.     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.389Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created Secret.  {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.399Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found.   {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.399Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.399Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.475Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created mysqlClient      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.475Z      INFO    controller-runtime.manager.controller.mysqluser Create MySQL user if not.     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-25T04:17:55.477Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created Secret.  {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n</code></pre> <ol> <li> <p>Reproduce steps:</p> <ol> <li><code>skaffold dev</code></li> <li><code>kubectl delete -k config/mysql</code></li> <li><code>kubectl apply -k config/samples-on-k8s</code></li> <li><code>kubectl apply -k config/mysql</code></li> </ol> <p>https://pkg.go.dev/github.com/redhat-cop/operator-utils@v1.1.4/pkg/util#ReconcilerBase.ManageSuccessWithRequeue</p> </li> <li> <p>Cause:</p> <pre><code>[manager] E1225 04:16:33.315173       1 event.go:264] Server rejected event '&amp;v1.Event{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"nakamasato.16c3e45a191f6bd4\", GenerateName:\"\", Namespace:\"default\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:\"MySQLUser\", Namespace:\"default\", Name:\"nakamasato\", UID:\"947ff02f-1950-4f37-9dcd-0e2d0d11db84\", APIVersion:\"mysql.nakamasato.com/v1alpha1\", ResourceVersion:\"572560\", FieldPath:\"\"}, Reason:\"ProcessingError\", Message:\"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\", Source:v1.EventSource{Component:\"mysqluser_controller\", Host:\"\"}, FirstTimestamp:v1.Time{Time:time.Time{wall:0xc069c4a1366643d4, ext:64615291501, loc:(*time.Location)(0x25472e0)}}, LastTimestamp:v1.Time{Time:time.Time{wall:0xc069c4a8523b024c, ext:93043659801, loc:(*time.Location)(0x25472e0)}}, Count:15, Type:\"Warning\", EventTime:v1.MicroTime{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, Series:(*v1.EventSeries)(nil), Action:\"\", Related:(*v1.ObjectReference)(nil), ReportingController:\"\", ReportingInstance:\"\"}': 'events \"nakamasato.16c3e45a191f6bd4\" is forbidden: User \"system:serviceaccount:mysql-operator-system:mysql-operator-controller-manager\" cannot patch resource \"events\" in API group \"\" in the namespace \"default\"' (will not retry!)\n</code></pre> </li> <li> <p>Reason: <code>User \"system:serviceaccount:mysql-operator-system:mysql-operator-controller-manager\" cannot patch resource \"events\" in API group \"\" in the namespace \"default\"'</code></p> </li> <li> <p>Solution: Add <code>//+kubebuilder:rbac:groups=core,resources=events,verbs=create;update;patch</code> to the controller. https://github.com/nakamasato/mysql-operator/pull/87</p> </li> <li> <p>After the fix:</p> <pre><code>kubectl get event --field-selector involvedObject.kind=MySQLUser\nLAST SEEN   TYPE      REASON            OBJECT                 MESSAGE\n23s         Warning   ProcessingError   mysqluser/nakamasato   dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\n</code></pre> </li> </ol>"},{"location":"developer-guide/debug/#dial-tcp-lookup-mysqldefault-on-109601053-no-such-host-it-takes-130-to-create-secret-since-mysql-recovers","title":"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host (it takes 1:30 to create Secret since MySQL recovers.)","text":"<pre><code>[manager] 2021-12-26T23:16:21.480Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-26T23:16:21.481Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:16:21.481Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:16:21.492Z      ERROR   controller-runtime.manager.controller.mysqluser Failed to connect to MySQL.     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"mysqlName\": \"mysql-sample\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).reconcileHandler\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:298\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-26T23:16:21.492Z      DEBUG   controller-runtime.manager.events       Warning {\"object\": {\"kind\":\"MySQLUser\",\"namespace\":\"default\",\"name\":\"nakamasato\",\"uid\":\"2d7b8b4a-fa11-4558-aaf2-1d4eb9edfa95\",\"apiVersion\":\"mysql.nakamasato.com/v1alpha1\",\"resourceVersion\":\"1134\"}, \"reason\": \"ProcessingError\", \"message\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] 2021-12-26T23:16:21.503Z      ERROR   controller-runtime.manager.controller.mysqluser Reconciler error        {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-26T23:16:21.503Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-26T23:16:21.503Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:16:21.503Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:16:21.517Z      ERROR   controller-runtime.manager.controller.mysqluser Failed to connect to MySQL.     {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"mysqlName\": \"mysql-sample\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).reconcileHandler\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:298\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-26T23:16:21.518Z      DEBUG   controller-runtime.manager.events       Warning {\"object\": {\"kind\":\"MySQLUser\",\"namespace\":\"default\",\"name\":\"nakamasato\",\"uid\":\"2d7b8b4a-fa11-4558-aaf2-1d4eb9edfa95\",\"apiVersion\":\"mysql.nakamasato.com/v1alpha1\",\"resourceVersion\":\"1211\"}, \"reason\": \"ProcessingError\", \"message\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] 2021-12-26T23:16:21.538Z      ERROR   controller-runtime.manager.controller.mysqluser Reconciler error        {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"error\": \"dial tcp: lookup mysql.default on 10.96.0.10:53: no such host\"}\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).processNextWorkItem\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:253\n[manager] sigs.k8s.io/controller-runtime/pkg/internal/controller.(*Controller).Start.func2.2\n[manager]       /go/pkg/mod/sigs.k8s.io/controller-runtime@v0.9.2/pkg/internal/controller/controller.go:214\n[manager] 2021-12-26T23:17:43.284Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.284Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.284Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.289Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created mysqlClient        {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.402Z      INFO    controller-runtime.manager.controller.mysqluser Generate new password for Secret        {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"secretName\": \"mysql-mysql-sample-nakamasato\"}\n[manager] 2021-12-26T23:17:43.402Z      INFO    controller-runtime.manager.controller.mysqluser Create MySQL user if not.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.404Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created Secret.    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.422Z      INFO    controller-runtime.manager.controller.mysqluser Fetch MySQLUser instance. MySQLUser resource found. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.422Z      INFO    controller-runtime.manager.controller.mysqluser Fetched MySQL instance. {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.422Z      INFO    controller-runtime.manager.controller.mysqluser started mysqlClient.Ping()      {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.427Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created mysqlClient        {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.427Z      INFO    controller-runtime.manager.controller.mysqluser Create MySQL user if not.       {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\", \"name\": \"nakamasato\", \"mysqlUser.Namespace\": \"default\"}\n[manager] 2021-12-26T23:17:43.431Z      INFO    controller-runtime.manager.controller.mysqluser Successfully created Secret.    {\"reconciler group\": \"mysql.nakamasato.com\", \"reconciler kind\": \"MySQLUser\", \"name\": \"nakamasato\", \"namespace\": \"default\"}\n</code></pre> <ol> <li>Reproduce steps:<ol> <li><code>skaffold dev</code></li> <li><code>kubectl delete -k config/mysql</code></li> <li><code>kubectl apply -k config/samples-on-k8s</code></li> <li><code>kubectl apply -k config/mysql</code></li> </ol> </li> </ol>"},{"location":"developer-guide/helm/","title":"helm","text":""},{"location":"developer-guide/helm/#create-helm-chart","title":"Create Helm chart","text":"<p>With helmify, you can create a helm chart</p> <ol> <li>Update Makefile     <pre><code>HELMIFY ?= $(LOCALBIN)/helmify\n\n.PHONY: helmify\nhelmify: $(HELMIFY) ## Download helmify locally if necessary.\n$(HELMIFY): $(LOCALBIN)\n    test -s $(LOCALBIN)/helmify || GOBIN=$(LOCALBIN) go install github.com/arttor/helmify/cmd/helmify@latest\n\nhelm: manifests kustomize helmify\n    $(KUSTOMIZE) build config/install | $(HELMIFY)\n</code></pre></li> <li>Run     <pre><code>make helm\n</code></pre></li> <li>Check generated files     <pre><code>chart\n\u251c\u2500\u2500 Chart.yaml\n\u251c\u2500\u2500 templates\n\u2502   \u251c\u2500\u2500 _helpers.tpl\n\u2502   \u251c\u2500\u2500 deployment.yaml\n\u2502   \u251c\u2500\u2500 leader-election-rbac.yaml\n\u2502   \u251c\u2500\u2500 manager-config.yaml\n\u2502   \u251c\u2500\u2500 manager-rbac.yaml\n\u2502   \u251c\u2500\u2500 metrics-reader-rbac.yaml\n\u2502   \u251c\u2500\u2500 metrics-service.yaml\n\u2502   \u251c\u2500\u2500 mysql-crd.yaml\n\u2502   \u251c\u2500\u2500 mysqldb-crd.yaml\n\u2502   \u251c\u2500\u2500 mysqluser-crd.yaml\n\u2502   \u2514\u2500\u2500 proxy-rbac.yaml\n\u2514\u2500\u2500 values.yaml\n\n1 directory, 13 files\n</code></pre></li> <li>Update name in <code>chart/Chart.yaml</code> <pre><code>name: mysql-operator\n</code></pre></li> <li>Update <code>chart/templates/deployment.yaml</code> for your purpose     What we do here is basically to enable to change <code>Deployment</code> from <code>Values</code>. (ref: #199)</li> <li>Package     <pre><code>helm package chart --app-version v0.2.0\n</code></pre>     The command will generate <code>mysql-operator-0.1.0.tgz</code></li> </ol>"},{"location":"developer-guide/helm/#publish-package-to-helm-chart-repo","title":"Publish package to Helm chart repo.","text":"<p>https://github.com/nakamasato/helm-charts is used for repo. All we need to do is to update the chart source file under charts/mysql-operator in the repo.</p> <p>We use GitHub Actions to update the repo.</p>"},{"location":"developer-guide/helm/#install-mysql-operator-with-the-helm-chart-from-local-source-file","title":"Install mysql-operator with the Helm chart (from local source file)","text":"<ol> <li> <p>Install mysql-operator with helm</p> <pre><code>helm install mysql-operator-0.1.0.tgz --generate-name\n</code></pre> <p>Optionally, you can add <code>--set adminUserSecretType=gcp --set gcpProjectId=$PROJECT_ID</code> to use GCP SecretManager to get AdminUser and/or AdminPassword.</p> <pre><code>NAME: mysql-operator-0-1680907162\nLAST DEPLOYED: Sat Apr  8 07:13:58 2023\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n</code></pre> </li> <li> <p>List</p> <pre><code>helm list\n</code></pre> <p><pre><code>NAME                            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION\nmysql-operator-0-1680907162     default         1               2023-04-08 07:39:22.416055 +0900 JST    deployed        mysql-operator-0.1.0    v0.2.0\n</code></pre> 1. Check operator is running <pre><code>kubectl get po\nNAME                                                             READY   STATUS    RESTARTS   AGE\nmysql-operator-0-1680907162-controller-manager-f9d855dc9-d4psm   0/1     Running   0          13s\n</code></pre> 1. (Optional) upgrade an existing release <pre><code>helm upgrade mysql-operator-0-1680913123 $HELM_PATH --set adminUserSecretType=gcp --set gcpProjectId=$PROJECT_ID\n</code></pre> 1. Uninstall <pre><code>helm uninstall mysql-operator-0-1680907162\n</code></pre></p> </li> </ol>"},{"location":"developer-guide/helm/#usage","title":"Usage","text":"<p>Install with Helm</p>"},{"location":"developer-guide/helm/#development-tips","title":"Development Tips","text":"<ol> <li>Check resulting yaml file     <pre><code>helm template chart\n</code></pre></li> </ol>"},{"location":"developer-guide/reconciliation/","title":"Reconciliation Loop (Old)","text":""},{"location":"developer-guide/reconciliation/#1-update-subresource-statusconditions-with-operator-utils","title":"1. Update subresource <code>status.conditions</code> (with operator-utils)","text":"<p>Use https://github.com/redhat-cop/operator-utils</p> <p>Usage:</p> <ol> <li> <p>Update Reconciler with:     <pre><code>import \"github.com/redhat-cop/operator-utils/pkg/util\"\n\n...\ntype MyReconciler struct {\n  util.ReconcilerBase\n  Log logr.Logger\n  ... other optional fields ...\n}\n</code></pre></p> </li> <li> <p>Update CRD:     <pre><code>  // +patchMergeKey=type\n  // +patchStrategy=merge\n  // +listType=map\n  // +listMapKey=type\n  Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"     patchMergeKey:\"type\"`\n}\n\nfunc (m *MyCRD) GetConditions() []metav1.Condition {\n  return m.Status.Conditions\n}\n\nfunc (m *MyCRD) SetConditions(conditions []metav1.Condition) {\n  m.Status.Conditions = conditions\n}\n</code></pre></p> </li> <li> <p>Replace <code>return ctrl.Result{}, err</code> with:</p> <pre><code>return r.ManageError(ctx, instance, err)\n</code></pre> </li> <li> <p>Replace <code>return ctrl.Result{}, nil</code> with:</p> <p><pre><code>return r.ManageSuccess(ctx, instance)\n</code></pre> 1. Object will have conditions: <pre><code>kubectl get mysqluser -o yaml\n</code></pre> <pre><code>status:\n  conditions:\n  - lastTransitionTime: \"2021-12-28T12:26:21Z\"\n    message: \"\"\n    observedGeneration: 1\n    reason: LastReconcileCycleSucceded\n    status: \"True\"\n    type: ReconcileSuccess\n</code></pre></p> </li> </ol>"},{"location":"developer-guide/reconciliation/#2-update-subresource-status","title":"2. Update subresource <code>status</code>","text":"<ol> <li> <p>Set mysqluser instance.</p> <p><pre><code>mysqlUser.Status.Phase = \"NotReady\"\nmysqlUser.Status.Reason = msg\n</code></pre> 1. Save the instance.</p> <pre><code>err := r.Status.Update(ctx, mysqlUser)\n</code></pre> </li> </ol> <p>When updating the status subresource from the client, the StatusWriter must be used. The status subresource is retrieved with Status() and updated with Update() or patched with Patch().</p> <p>https://sdk.operatorframework.io/docs/building-operators/golang/references/client/#updating-status-subresource</p>"},{"location":"developer-guide/reconciliation/#3-display-field-in-the-result-of-kubectl-get-additionalprintercolumns","title":"3. Display field in the result of <code>kubectl get</code> (<code>additionalPrinterColumns</code>)","text":"<p>If you don't want to <code>kubebuilder</code> marker, you can write CRD by yourself.</p> <ol> <li>Add a column to Status.     <pre><code> type MySQLStatus struct {\n        // INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\n        // Important: Run \"make\" to regenerate code after modifying this file\n+\n+       //+kubebuilder:default=0\n+       UserCount int32 `json:\"userCount\"`\n }\n</code></pre></li> <li>Add kubebuilder marker.     <pre><code> //+kubebuilder:object:root=true\n //+kubebuilder:subresource:status\n+//+kubebuilder:printcolumn:name=\"UserCount\",type=\"integer\",JSONPath=\".status.userCount\",description=\"The number of MySQLUsers that belongs to the MySQL\"\n\n // MySQL is the Schema for the mysqls API\n type MySQL struct {\n</code></pre></li> <li> <p>Run <code>make manifests</code>.</p> <pre><code>     singular: mysql\n   scope: Namespaced\n   versions:\n-  - name: v1alpha1\n+  - additionalPrinterColumns:\n+    - description: The number of MySQLUsers that belongs to the MySQL\n+      jsonPath: .status.userCount\n+      name: UserCount\n+      type: integer\n+    name: v1alpha1\n     schema:\n       openAPIV3Schema:\n         description: MySQL is the Schema for the mysqls API\n@@ -52,6 +57,13 @@ spec:\n             type: object\n           status:\n             description: MySQLStatus defines the observed state of MySQL\n+            properties:\n+              userCount:\n+                default: 0\n+                format: int32\n+                type: integer\n+            required:\n+            - userCount\n             type: object\n         type: object\n     served: true\n</code></pre> </li> <li> <p><code>kubectl get</code> <pre><code>kubectl get mysql\nNAME           USERCOUNT\nmysql-sample\n</code></pre></p> </li> </ol> <p>https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#additional-printer-columns</p>"},{"location":"developer-guide/reconciliation/#4-add-ownerreference-or-setcontrollerreference-between-customresources","title":"4. Add <code>OwnerReference</code> or <code>SetControllerReference</code> between CustomResources","text":"<ol> <li> <p>Add <code>SetControllerReference</code> for MySQL     <pre><code>controllerutil.SetControllerReference(mysql, mysqlUser, r.Scheme)\nerr := r.GetClient().Update(ctx, mysqlUser)\nif err != nil {\n    return r.ManageError(ctx, mysqlUser, err) // requeue\n}\n</code></pre></p> </li> <li> <p>Get in yaml format.</p> <pre><code>kubectl get mysqluser nakamasato -o yaml\n...\nmetadata:\n  ...\n  ownerReferences:\n  - apiVersion: mysql.nakamasato.com/v1alpha1\n    blockOwnerDeletion: true\n    controller: true\n    kind: MySQL\n    name: mysql-sample\n    uid: 0689bf66-86a3-40a5-8e50-5e91533a8dc8\n  resourceVersion: \"928\"\n  uid: 09c69b78-79c5-4af8-9f84-7eb5dba52371\n...\n</code></pre> </li> <li> <p>SetControllerReference: Use this when you want to reconcile the owner object on changes to controlled one.     &gt; SetControllerReference sets owner as a Controller OwnerReference on controlled. This is used for garbage collection of the controlled object and for reconciling the owner object on changes to controlled (with a Watch + EnqueueRequestForOwner).</p> <p>Usually use with the following line in <code>SetupWithManager</code>: <pre><code>Owns(&amp;mysqlv1alpha1.MySQLUser{}).\n</code></pre> - SetOwnerReference: Use this when you just want garbage collection.</p> <p>SetOwnerReference is a helper method to make sure the given object contains an object reference to the object provided. This allows you to declare that owner has a dependency on the object without specifying it as a controller.</p> </li> </ol>"},{"location":"developer-guide/reconciliation/#5-finalizer-handle-cleanup-on-deletion-of-external-resource","title":"5. Finalizer (Handle Cleanup on Deletion of external resource)","text":"<p>Finalizer is set to wait until dependents are deleted before deleting the object.</p> <ol> <li>When a new object is created, add the finalizer.</li> <li>When an object is deleted, <code>DeletionTimestamp</code> will be set.</li> <li>Execute the finalizer logic if the finalizer exists.</li> <li> <p>Remove the finalizer.</p> <p>Once the list of finalizers is empty, meaning all finalizers have been executed, the resource is deleted by Kubernetes.</p> </li> <li> <p>https://kubernetes.io/blog/2021/05/14/using-finalizers-to-control-deletion/</p> </li> <li>https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#advanced-topics</li> <li>https://book.kubebuilder.io/reference/using-finalizers.html</li> <li>https://sdk.operatorframework.io/docs/building-operators/golang/advanced-topics/#handle-cleanup-on-deletion</li> </ol>"},{"location":"developer-guide/testing/","title":"Testing","text":""},{"location":"developer-guide/testing/#1-controller-test","title":"1. Controller test","text":"<p>Tools:</p> <ul> <li>envtest</li> </ul>"},{"location":"developer-guide/testing/#2-e2e-test","title":"2. e2e test","text":"<p>Currently, there are two ways for e2e tests.</p> <ol> <li>kuttl (will be deleted)</li> <li>kind + skaffold + Ginkgo + Gomage</li> </ol>"},{"location":"developer-guide/testing/#21-e2e-with-kind-skaffold-ginkgo-gomega","title":"2.1. e2e with kind + skaffold + ginkgo + gomega","text":""},{"location":"developer-guide/testing/#211-prerequisite","title":"2.1.1 Prerequisite**","text":"<ul> <li>kind: local Kubernetes cluster</li> <li>Skaffold: workflow for building, pushing and deploying your application</li> <li>ginkgo</li> <li>gomega</li> </ul>"},{"location":"developer-guide/testing/#212-test-steps","title":"2.1.2. Test steps**","text":"<ol> <li>BeforeSuite:<ol> <li>Prepare <code>kind</code> cluster.<ol> <li>Create <code>kind</code> cluster if not exist. Otherwise, recreate <code>kind</code> cluster if <code>lazymode</code> is false.</li> </ol> </li> <li>Set up <code>k8sClient</code>.</li> <li>Delete <code>MySQLUser</code> and <code>MySQL</code> resources.</li> <li>Execute <code>skaffold run</code>.<ol> <li>Deploy CRD and mysql-operator.</li> <li>Deploy MySQL with <code>Deployment</code>.</li> </ol> </li> <li>Check <code>mysql-operator</code> is running.</li> </ol> </li> <li>Run test cases.</li> <li>AfterSuite:<ol> <li>Execute <code>skaffold delete</code>.</li> <li>Clean up <code>kind</code> cluster.</li> </ol> </li> </ol>"},{"location":"developer-guide/testing/#213-run","title":"2.1.3. Run","text":"<pre><code>make e2e-with-ginkgo\n</code></pre>"},{"location":"developer-guide/testing/#214-manually-run-all-the-steps","title":"2.1.4 Manually run all the steps","text":"<p>if we want to debug with running each step with commands</p> <ol> <li>Create a <code>kind</code> cluster:     <pre><code>kind create cluster --name mysql-operator-e2e --kubeconfig e2e/kubeconfig --config e2e/kind-config.yml --wait 30s\n</code></pre></li> <li>Delete <code>MySQLUser</code> resources if exists.<ol> <li>Delete the object:     <pre><code>kubectl delete mysqluser john --kubeconfig e2e/kubeconfig\n</code></pre></li> <li>Remove the finalizer if stuck:     <pre><code>kubectl patch mysqluser john -p '{\"metadata\":{\"finalizers\": []}}' --type=merge --kubeconfig e2e/kubeconfig\n</code></pre></li> </ol> </li> <li>Delete <code>MySQL</code> resources if exists.<ol> <li>Delete the object:     <pre><code>kubectl delete mysql mysql-sample --kubeconfig e2e/kubeconfig\n</code></pre></li> <li>Remove the finalizer if stuck:     <pre><code>kubectl patch mysql mysql-sample -p '{\"metadata\":{\"finalizers\": []}}' --type=merge --kubeconfig e2e/kubeconfig\n</code></pre></li> </ol> </li> <li> <p>Deploy <code>CRD</code>, <code>mysql-operator</code>, and MySQL with <code>Deployment</code>:     <pre><code>cd e2e &amp;&amp; skaffold run --kubeconfig kubeconfig --tail\n</code></pre></p> </li> <li> <p>Run individual test</p> <pre><code>bin/ginkgo --focus \"Successfully Create MySQL database\" ./e2e\n</code></pre> </li> </ol>"},{"location":"developer-guide/testing/#22-e2e-with-kuttl","title":"2.2. e2e with kuttl","text":""},{"location":"developer-guide/testing/#221-prerequisite","title":"2.2.1. Prerequisite","text":"<ul> <li>kind: local Kubernetes cluster</li> <li>krew: kubectl plugin manager     <pre><code>(\n  set -x; cd \"$(mktemp -d)\" &amp;&amp;\n  OS=\"$(uname | tr '[:upper:]' '[:lower:]')\" &amp;&amp;\n  ARCH=\"$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(arm\\)\\(64\\)\\?.*/\\1\\2/' -e 's/aarch64$/arm64/')\" &amp;&amp;\n  KREW=\"krew-${OS}_${ARCH}\" &amp;&amp;\n  curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz\" &amp;&amp;\n  tar zxvf \"${KREW}.tar.gz\" &amp;&amp;\n  ./\"${KREW}\" install krew\n)\n</code></pre>     Add <code>export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"</code> to <code>~/.bashrc</code> or <code>~/.zshrc</code></li> <li>kuttl: The KUbernetes Test TooL (kuttl)     <pre><code>brew tap kudobuilder/tap\nbrew install kuttl-cli\n</code></pre></li> </ul>"},{"location":"developer-guide/testing/#222-test-scenario","title":"2.2.2. Test scenario","text":"<ol> <li>MySQL <code>Deployment</code> and <code>Service</code>. -&gt; Assert MySQL replica is 1.</li> <li>Apply <code>config/samples-on-k8s</code>. -&gt; <code>Secret</code> <code>mysql-mysql-sample-nakamasato</code> exists.</li> </ol>"},{"location":"developer-guide/testing/#223-e2e-steps","title":"2.2.3. e2e steps","text":"<ol> <li>Build a docker image <code>mysql-operator</code> with the latest codes.</li> <li>Deploy controller (local image if you're running in local).</li> <li>Deploy mysql <code>Deployment</code> and <code>Service</code>.</li> <li>Create <code>MySQL</code> and <code>MySQLUser</code> by <code>kubectl apply -k ../../../config/samples-on-k8s</code>.</li> <li>Check <code>Secret</code> <code>mysql-mysql-sample-nakamasato</code>.</li> </ol>"},{"location":"developer-guide/testing/#224-run","title":"2.2.4. Run","text":"<pre><code>make e2e-with-kuttl\n</code></pre> <pre><code>docker build -t ghcr.io/nakamasato/mysql-operator:latest .\n[+] Building 1.1s (17/17) FINISHED\n =&gt; [internal] load build definition from Dockerfile                                    0.0s\n =&gt; =&gt; transferring dockerfile: 37B                                                     0.0s\n =&gt; [internal] load .dockerignore                                                       0.0s\n =&gt; =&gt; transferring context: 35B                                                        0.0s\n =&gt; [internal] load metadata for gcr.io/distroless/static:nonroot                       0.9s\n =&gt; [internal] load metadata for docker.io/library/golang:1.16                          1.0s\n =&gt; [builder 1/9] FROM docker.io/library/golang:1.16@sha256:527d720ce3e2bc9b8900c9c165  0.0s\n =&gt; [internal] load build context                                                       0.0s\n =&gt; =&gt; transferring context: 643B                                                       0.0s\n =&gt; [stage-1 1/3] FROM gcr.io/distroless/static:nonroot@sha256:07869abb445859465749913  0.0s\n =&gt; CACHED [builder 2/9] WORKDIR /workspace                                             0.0s\n =&gt; CACHED [builder 3/9] COPY go.mod go.mod                                             0.0s\n =&gt; CACHED [builder 4/9] COPY go.sum go.sum                                             0.0s\n =&gt; CACHED [builder 5/9] RUN go mod download                                            0.0s\n =&gt; CACHED [builder 6/9] COPY main.go main.go                                           0.0s\n =&gt; CACHED [builder 7/9] COPY api/ api/                                                 0.0s\n =&gt; CACHED [builder 8/9] COPY controllers/ controllers/                                 0.0s\n =&gt; CACHED [builder 9/9] RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o mana  0.0s\n =&gt; CACHED [stage-1 2/3] COPY --from=builder /workspace/manager .                       0.0s\n =&gt; exporting to image                                                                  0.0s\n =&gt; =&gt; exporting layers                                                                 0.0s\n =&gt; =&gt; writing image sha256:abcaffd48dc037de5e3cce48890e720c6bdcf86f229be598aaaeb76cf8  0.0s\n =&gt; =&gt; naming to ghcr.io/nakamasato/mysql-operator:latest                               0.0s\n\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them\n/Applications/Xcode.app/Contents/Developer/usr/bin/make kuttl\nkubectl kuttl test\n=== RUN   kuttl\n    harness.go:457: starting setup\n    harness.go:245: running tests with KIND.\n    harness.go:174: temp folder created /var/folders/5g/vmdg2t1j2011ggd9p983ns6h0000gn/T/kuttl484640091\n    harness.go:203: node mount point /var/lib/docker/volumes/kind-0/_data\n    harness.go:156: Starting KIND cluster\n    kind.go:67: Adding Containers to KIND...\n    kind.go:76: Add image mysql-operator:latest to node kind-control-plane\n    harness.go:285: Successful connection to cluster at: https://127.0.0.1:57498\n    logger.go:42: 22:09:26 |  | running command: [make install deploy IMG=mysql-operator VERSION=latest]\n    logger.go:42: 22:09:26 |  | /Users/masato-naka/repos/nakamasato/mysql-operator/bin/controller-gen \"crd:trivialVersions=true,preserveUnknownFields=false\" rbac:roleName=manager-role webhook paths=\"./...\" output:crd:artifacts:config=config/crd/bases\n    logger.go:42: 22:09:28 |  | /Users/masato-naka/repos/nakamasato/mysql-operator/bin/kustomize build config/crd | kubectl apply -f -\n    logger.go:42: 22:09:31 |  | customresourcedefinition.apiextensions.k8s.io/mysqls.mysql.nakamasato.com created\n    logger.go:42: 22:09:31 |  | customresourcedefinition.apiextensions.k8s.io/mysqlusers.mysql.nakamasato.com created\n    logger.go:42: 22:09:31 |  | cd config/manager &amp;&amp; /Users/masato-naka/repos/nakamasato/mysql-operator/bin/kustomize edit set image controller=mysql-operator\n    logger.go:42: 22:09:31 |  | /Users/masato-naka/repos/nakamasato/mysql-operator/bin/kustomize build config/default | kubectl apply -f -\n    logger.go:42: 22:09:32 |  | namespace/mysql-operator-system created\n    logger.go:42: 22:09:32 |  | customresourcedefinition.apiextensions.k8s.io/mysqls.mysql.nakamasato.com configured\n    logger.go:42: 22:09:32 |  | customresourcedefinition.apiextensions.k8s.io/mysqlusers.mysql.nakamasato.com configured\n    logger.go:42: 22:09:32 |  | serviceaccount/mysql-operator-controller-manager created\n    logger.go:42: 22:09:32 |  | role.rbac.authorization.k8s.io/mysql-operator-leader-election-role created\n    logger.go:42: 22:09:32 |  | clusterrole.rbac.authorization.k8s.io/mysql-operator-manager-role created\n    logger.go:42: 22:09:32 |  | clusterrole.rbac.authorization.k8s.io/mysql-operator-metrics-reader created\n    logger.go:42: 22:09:32 |  | clusterrole.rbac.authorization.k8s.io/mysql-operator-proxy-role created\n    logger.go:42: 22:09:32 |  | rolebinding.rbac.authorization.k8s.io/mysql-operator-leader-election-rolebinding created\n    logger.go:42: 22:09:32 |  | clusterrolebinding.rbac.authorization.k8s.io/mysql-operator-manager-rolebinding created\n    logger.go:42: 22:09:32 |  | clusterrolebinding.rbac.authorization.k8s.io/mysql-operator-proxy-rolebinding created\n    logger.go:42: 22:09:32 |  | configmap/mysql-operator-manager-config created\n    logger.go:42: 22:09:32 |  | service/mysql-operator-controller-manager-metrics-service created\n    logger.go:42: 22:09:32 |  | deployment.apps/mysql-operator-controller-manager created\n    harness.go:353: running tests\n    harness.go:74: going to run test suite with timeout of 120 seconds for each step\n    harness.go:365: testsuite: tests/e2e/ has 1 tests\n=== RUN   kuttl/harness\n=== RUN   kuttl/harness/with-valid-mysql\n=== PAUSE kuttl/harness/with-valid-mysql\n=== CONT  kuttl/harness/with-valid-mysql\n    logger.go:42: 22:09:32 | with-valid-mysql | Skipping creation of user-supplied namespace: default\n    logger.go:42: 22:09:32 | with-valid-mysql/0-mysql-deployment | starting test step 0-mysql-deployment\n    logger.go:42: 22:09:32 | with-valid-mysql/0-mysql-deployment | Deployment:default/mysql created\n    logger.go:42: 22:09:32 | with-valid-mysql/0-mysql-deployment | Service:default/mysql created\n    logger.go:42: 22:09:43 | with-valid-mysql/0-mysql-deployment | test step completed 0-mysql-deployment\n    logger.go:42: 22:09:43 | with-valid-mysql/1-create-mysql-user | starting test step 1-create-mysql-user\n    logger.go:42: 22:09:43 | with-valid-mysql/1-create-mysql-user | running command: [kubectl apply -k ../../../config/samples-on-k8s --namespace default]\n    logger.go:42: 22:09:46 | with-valid-mysql/1-create-mysql-user | Warning: resource services/mysql is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.\n    logger.go:42: 22:09:46 | with-valid-mysql/1-create-mysql-user | service/mysql configured\n    logger.go:42: 22:09:46 | with-valid-mysql/1-create-mysql-user | Warning: resource deployments/mysql is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by kubectl apply. kubectl apply should only be used on resources created declaratively by either kubectl create --save-config or kubectl apply. The missing annotation will be patched automatically.\n    logger.go:42: 22:09:46 | with-valid-mysql/1-create-mysql-user | deployment.apps/mysql configured\n    logger.go:42: 22:09:46 | with-valid-mysql/1-create-mysql-user | mysql.mysql.nakamasato.com/mysql-sample created\n    logger.go:42: 22:09:46 | with-valid-mysql/1-create-mysql-user | mysqluser.mysql.nakamasato.com/nakamasato created\n    logger.go:42: 22:09:52 | with-valid-mysql/1-create-mysql-user | test step completed 1-create-mysql-user\n    logger.go:42: 22:09:52 | with-valid-mysql | with-valid-mysql events from ns default:\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:16 +0900 JST   Normal  Node kind-control-plane              Starting        Starting kubelet.\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:16 +0900 JST   Normal  Node kind-control-plane              NodeHasSufficientMemory Node kind-control-plane status is now: NodeHasSufficientMemory\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:16 +0900 JST   Normal  Node kind-control-plane              NodeHasNoDiskPressure   Node kind-control-plane status is now: NodeHasNoDiskPressure\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:16 +0900 JST   Normal  Node kind-control-plane              NodeHasSufficientPID    Node kind-control-plane status is now: NodeHasSufficientPID\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:16 +0900 JST   Normal  Node kind-control-plane              NodeAllocatableEnforced Updated Node Allocatable limit across pods\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:26 +0900 JST   Normal  Node kind-control-plane              RegisteredNode  Node kind-control-plane event: Registered Node kind-control-plane in Controller\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:27 +0900 JST   Normal  Node kind-control-plane              Starting        Starting kube-proxy.\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:32 +0900 JST   Warning Pod mysql-5fd4b796b6-jhx52           FailedScheduling        0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:32 +0900 JST   Normal  ReplicaSet.apps mysql-5fd4b796b6             SuccessfulCreate        Created pod: mysql-5fd4b796b6-jhx52\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:32 +0900 JST   Normal  Deployment.apps mysql                ScalingReplicaSet       Scaled up replica set mysql-5fd4b796b6 to 1\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:36 +0900 JST   Normal  Node kind-control-plane              NodeReady       Node kind-control-plane status is now: NodeReady\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:41 +0900 JST   Normal  Pod mysql-5fd4b796b6-jhx52           Scheduled       Successfully assigned default/mysql-5fd4b796b6-jhx52 to kind-control-plane\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:42 +0900 JST   Normal  Pod mysql-5fd4b796b6-jhx52.spec.containers{mysql}            Pulled  Container image \"mysql:5.7\" already present on machine\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:42 +0900 JST   Normal  Pod mysql-5fd4b796b6-jhx52.spec.containers{mysql}            Created Created container mysql\n    logger.go:42: 22:09:52 | with-valid-mysql | 2021-10-02 22:09:42 +0900 JST   Normal  Pod mysql-5fd4b796b6-jhx52.spec.containers{mysql}            Started Started container mysql\n    logger.go:42: 22:09:52 | with-valid-mysql | Skipping deletion of user-supplied namespace: default\n=== CONT  kuttl\n    harness.go:399: run tests finished\n    harness.go:508: cleaning up\n    harness.go:517: collecting cluster logs to kind-logs-1633180192\n    harness.go:563: removing temp folder: \"/var/folders/5g/vmdg2t1j2011ggd9p983ns6h0000gn/T/kuttl484640091\"\n    harness.go:569: tearing down kind cluster\n--- PASS: kuttl (295.94s)\n    --- PASS: kuttl/harness (0.00s)\n        --- PASS: kuttl/harness/with-valid-mysql (20.45s)\nPASS\n</code></pre>"},{"location":"developer-guide/testing/#3-errors","title":"3. Errors","text":"<p>Please read debug</p>"},{"location":"developer-guide/tools/","title":"Tools","text":"<ol> <li>operator-sdk: Kubernetes operator framework</li> <li>controller-runtime: Kubernetes operator development tool</li> <li>controller-tools:<ol> <li>bump to v0.13.0 in controller-runtime: https://github.com/kubernetes-sigs/controller-runtime/pull/2450</li> </ol> </li> <li>golang-migrate: database schema migration tool</li> <li>atlas: database schema migration tool</li> <li>helm: release package management</li> <li>kind: local cluster</li> <li>kuttl: e2e test</li> <li>ginkgo: Go test</li> <li>skaffold: local run &amp; mysql-operator setup for testing</li> </ol>"},{"location":"developer-guide/versions/","title":"Versions","text":""},{"location":"developer-guide/versions/#operator-sdk","title":"operator-sdk","text":"<p>Originally created with v1.10.1</p> <p><code>Makefile</code> was updated with v1.28.0</p> <p>Steps:</p> <ol> <li>create temporary dir</li> <li>create operator-sdk project     <pre><code>operator-sdk init --domain nakamasato.com --repo github.com/nakamasato/mysql-operator\n</code></pre></li> <li>copy <code>Makefile</code> to this repo</li> <li>Update a few points<ol> <li>IMAGE_TAG_BASE     <pre><code>IMAGE_TAG_BASE ?= nakamasato/mysql-operator\n</code></pre></li> <li>IMG     <pre><code>IMG ?= ghcr.io/nakamasato/mysql-operator\n</code></pre></li> <li>test     <pre><code>test: manifests generate fmt vet envtest ## Run tests.\n        KUBEBUILDER_ASSETS=\"$(shell $(ENVTEST) use $(ENVTEST_K8S_VERSION) -p path)\" $(GINKGO) -cover -coverprofile cover.out -covermode=atomic -sk\nip-package=e2e ./...\n</code></pre></li> <li> <p>gingko     <pre><code>GINKGO_VERSION ?= v2.9.2\n</code></pre></p> <p><pre><code>GINKGO = $(LOCALBIN)/ginkgo\nginkgo:\n    test -s $(LOCALBIN)/ginkgo &amp;&amp; $(LOCALBIN)/ginkgo version | grep -q $(GINKGO_VERSION) || \\\n    GOBIN=$(LOCALBIN) go install github.com/onsi/ginkgo/v2/ginkgo@$(GINKGO_VERSION)\n</code></pre>     1. helmify</p> <pre><code>HELMIFY ?= $(LOCALBIN)/helmify\n\n.PHONY: helmify\nhelmify: $(HELMIFY) ## Download helmify locally if necessary.\n$(HELMIFY): $(LOCALBIN)\n    test -s $(LOCALBIN)/helmify || GOBIN=$(LOCALBIN) go install github.com/arttor/helmify/cmd/helmify@latest\n\nhelm: manifests kustomize helmify\n    $(KUSTOMIZE) build config/default | $(HELMIFY)\n</code></pre> </li> </ol> </li> </ol>"},{"location":"developer-guide/versions/#kubebuilder","title":"kubebuilder","text":""},{"location":"developer-guide/versions/#migration-from-gov3-to-gov4","title":"Migration from go/v3 to go/v4","text":"<ul> <li>https://book.kubebuilder.io/migration/manually_migration_guide_gov3_to_gov4</li> <li>https://github.com/kubernetes-sigs/kubebuilder/blob/master/testdata/project-v4/Makefile</li> <li>https://book.kubebuilder.io/migration/migration_guide_gov3_to_gov4</li> </ul> <pre><code>kubebuilder version\nVersion: main.version{KubeBuilderVersion:\"3.11.0\", KubernetesVendor:\"1.27.1\", GitCommit:\"3a3d1d9573f5b8fe7252bf49cec6e67ba87c88e7\", BuildDate:\"2023-06-20T19:20:03Z\", GoOs:\"darwin\", GoArch:\"arm64\"}\n</code></pre> <pre><code>go mod init github.com/nakamasato/mysql-operator\n</code></pre> <pre><code>kubebuilder init --domain nakamasato.com --plugins=go/v4\n</code></pre> <pre><code>kubebuilder create api --group mysql --version v1alpha1 --kind MySQL --controller --api\nkubebuilder create api --group mysql --version v1alpha1 --kind MySQLDB --controller --api\nkubebuilder create api --group mysql --version v1alpha1 --kind MySQLUser --controller --api\n</code></pre> <p>Copy apis</p> <p>Copy internal packages <pre><code>cp -r ../mysql-operator/internal/metrics internal\ncp -r ../mysql-operator/internal/mysql internal/mysql\ncp -r ../mysql-operator/internal/secret internal/\ncp -r ../mysql-operator/internal/utils internal/\n</code></pre></p>"},{"location":"usage/gcp-secretmanager/","title":"Run on GKE and manage Cloud SQL (MySQL) with GCP SecretManager","text":"<p>mysql-operator can get the credentials of the <code>MySQL</code> user (which is used to access to the target MySQL cluster) from GCP SecretManager</p> <p>In this example, we'll use Cloud SQL for MySQL, and run mysql-operator on GKE.</p>"},{"location":"usage/gcp-secretmanager/#1-prepare-gcp-resources","title":"1. Prepare GCP resources","text":""},{"location":"usage/gcp-secretmanager/#11-prepare-env-var-and-gcloud","title":"1.1. Prepare env var and gcloud","text":"<ol> <li> <p>Set environment variables     <pre><code>INSTANCE_NAME=mysql-test\nZONE=asia-northeast1-b\nREGION=asia-northeast1\nSECRET_NAME=mysql-password\nSA_NAME=mysql-operator\nGKE_CLUSTER_NAME=hello-cluster\nNAMESPACE=mysql-operator\nKSA_NAME=mysql-operator-controller-manager\n</code></pre></p> </li> <li> <p>Configure gcloud project</p> <pre><code>PROJECT=&lt;your_project_id&gt;\ngcloud config set project $PROJECT\n</code></pre> </li> </ol>"},{"location":"usage/gcp-secretmanager/#12-create-gke-cluster","title":"1.2. Create GKE cluster","text":"<ol> <li> <p>Create GKE cluster</p> <p><pre><code>gcloud container clusters create-auto $GKE_CLUSTER_NAME --location=$REGION\n</code></pre> 1. Set up kubeconfig <pre><code>gcloud container clusters get-credentials $GKE_CLUSTER_NAME --location=$REGION\n</code></pre></p> </li> </ol>"},{"location":"usage/gcp-secretmanager/#13-create-cloud-sql-instance","title":"1.3. Create Cloud SQL instance.","text":"<ol> <li>Generate random password for root user.     <pre><code>ROOT_PASSWORD=$(openssl rand -base64 32)\n</code></pre></li> <li> <p>Create Cloud SQL instance.     <pre><code>gcloud sql instances create $INSTANCE_NAME \\\n--cpu=1 \\\n--memory=3840MiB \\\n--zone=${ZONE} \\\n--root-password=$ROOT_PASSWORD \\\n--project ${PROJECT}\n</code></pre></p> <p>For existing instance, you can reset the root password with the following command:</p> <pre><code>gcloud sql users set-password root \\\n    --host=% \\\n    --instance=$INSTANCE_NAME \\\n    --password=$ROOT_PASSWORD\n</code></pre> </li> </ol>"},{"location":"usage/gcp-secretmanager/#14-create-secretmanager-secret-for-root-password","title":"1.4. Create SecretManager secret for root password","text":"<ol> <li> <p>Create Secret <code>mysql-password</code> with value <code>password</code>, which will be used for the credentials of custom resource <code>MySQL</code>.     <pre><code>gcloud secrets create $SECRET_NAME --replication-policy=\"automatic\" --project ${PROJECT}\n</code></pre></p> <pre><code>echo -n \"${ROOT_PASSWORD}\" | gcloud secrets versions add $SECRET_NAME --data-file=- --project ${PROJECT}\n</code></pre> </li> <li> <p>Create service account <code>mysql-operator</code></p> <pre><code>gcloud iam service-accounts create $SA_NAME --display-name=$SA_NAME\n</code></pre> </li> <li> <p>Grant necessary permission for the created <code>Secret</code> to the service account</p> <ol> <li> <p><code>roles/secretmanager.secretAccessor</code>: To allow mysql-operator to get root password from SecretManager</p> <pre><code>gcloud secrets add-iam-policy-binding $SECRET_NAME \\\n    --member=\"serviceAccount:${SA_NAME}@${PROJECT}.iam.gserviceaccount.com\" \\\n    --role=\"roles/secretmanager.secretAccessor\" --project ${PROJECT}\n</code></pre> </li> <li> <p><code>roles/cloudsql.client</code>: To allow mysql-operator can connect to Cloud SQL     <pre><code>gcloud projects add-iam-policy-binding $PROJECT \\\n    --member=\"serviceAccount:${SA_NAME}@${PROJECT}.iam.gserviceaccount.com\" \\\n    --role=\"roles/cloudsql.client\"\n</code></pre></p> </li> <li> <p><code>roles/iam.workloadIdentityUser</code>: To allow to Kubernete Pod to impersonate the Service Account</p> <pre><code>gcloud iam service-accounts add-iam-policy-binding ${SA_NAME}@${PROJECT}.iam.gserviceaccount.com \\\n    --role roles/iam.workloadIdentityUser \\\n    --member \"serviceAccount:${PROJECT}.svc.id.goog[${NAMESPACE}/${KSA_NAME}]\"\n</code></pre> <p>For more details, read Workload Identity</p> </li> </ol> </li> </ol>"},{"location":"usage/gcp-secretmanager/#15-create-service-account-for-mysql-operator","title":"1.5. Create Service Account for <code>mysql-operator</code>","text":""},{"location":"usage/gcp-secretmanager/#2-install-mysql-operator-with-helm","title":"2. Install <code>mysql-operator</code> with Helm","text":"<ol> <li> <p>Create a Namespace.</p> <pre><code>kubectl create ns $NAMESPACE\n</code></pre> </li> <li> <p>Deploy with Helm.</p> <pre><code>helm repo add nakamasato https://nakamasato.github.io/helm-charts\nhelm repo update\n</code></pre> <pre><code>helm install mysql-operator nakamasato/mysql-operator \\\n    --set adminUserSecretType=gcp \\\n    --set gcpServiceAccount=${SA_NAME}@${PROJECT}.iam.gserviceaccount.com \\\n    --set gcpProjectId=$PROJECT \\\n    --set cloudSQL.instanceConnectionName=$PROJECT:$REGION:$INSTANCE_NAME \\\n    -n $NAMESPACE\n</code></pre> </li> <li> <p>Check Helm release.</p> <p><pre><code>helm list -n $NAMESPACE\nNAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION\nmysql-operator  mysql-operator  1               2023-09-09 12:03:54.220046 +0900 JST    deployed        mysql-operator-v0.3.0   v0.3.0\n</code></pre> 1. Check <code>mysql-operator</code> Pod. <pre><code>kubectl get pod -n $NAMESPACE\nNAME                                                 READY   STATUS    RESTARTS   AGE\nmysql-operator-controller-manager-77649f6bb9-xbt9l   2/2     Running   0          2m59s\n</code></pre></p> </li> </ol>"},{"location":"usage/gcp-secretmanager/#3-create-custom-resources-manage-mysql-users-databases-schemas-etc","title":"3. Create custom resources (Manage MySQL users, databases, schemas, etc.)","text":"<ol> <li> <p>Create sample <code>MySQL</code>, <code>MySQLUser</code>, <code>MySQLDB</code>.</p> <p>If you want to create sample MySQL, MySQLUser, and <code>MySQLDB</code> at once, you can use the following command:</p> <pre><code>kubectl apply -k https://github.com/nakamasato/mysql-operator/config/samples-on-k8s-with-gcp-secretmanager\n</code></pre> </li> <li> <p>Create <code>MySQL</code></p> <pre><code>kubectl apply -f - &lt;&lt;EOF\napiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQL\nmetadata:\n  name: $INSTANCE_NAME\nspec:\n  host: \"127.0.0.1\" # auth SQL proxy\n  adminUser:\n    name: root\n    type: raw\n  adminPassword:\n    name: $SECRET_NAME\n    type: gcp\nEOF\n</code></pre> <p>Check the status <pre><code>NAME         HOST        ADMINUSER   CONNECTED   USERCOUNT   DBCOUNT   REASON\nmysql-test   127.0.0.1   root        true        0           0         Ping succeded and updated MySQLClients\n</code></pre></p> </li> <li> <p>Create MySQL user <code>sample-user</code>.</p> <pre><code>kubectl apply -f - &lt;&lt;EOF\napiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQLUser\nmetadata:\n  name: sample-user\nspec:\n  mysqlName: $INSTANCE_NAME\nEOF\n</code></pre> <pre><code>kubectl get secret\nNAME                           TYPE     DATA   AGE\nmysql-mysql-test-sample-user   Opaque   1      99s\n</code></pre> </li> <li> <p>Create MySQL DB <code>sample_db</code></p> <pre><code>kubectl apply -f - &lt;&lt;EOF\napiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQLDB\nmetadata:\n  name: sample-db # this is a Kubernetes object name, not the name for MySQL database\nspec:\n  dbName: sample_db # this is MySQL database name\n  mysqlName: $INSTANCE_NAME\nEOF\n</code></pre> <pre><code>kubectl get mysqldb\nNAME        PHASE   REASON                          SCHEMAMIGRATION\nsample-db   Ready   Database successfully created   {\"dirty\":false,\"version\":0}\n</code></pre> </li> <li> <p>Check</p> <pre><code>cloud-sql-proxy ${PROJECT}:${REGION}:${INSTANCE_NAME}\n</code></pre> <pre><code>mysql -uroot -p${ROOT_PASSWORD} --host 127.0.0.1\n</code></pre> <pre><code>mysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sample_db          |\n| sys                |\n+--------------------+\n5 rows in set (0.01 sec)\n</code></pre> <pre><code>mysql&gt; select User, Host from mysql.user where User = 'sample-user';\n+-------------+------+\n| User        | Host |\n+-------------+------+\n| sample-user | %    |\n+-------------+------+\n1 row in set (0.01 sec)\n</code></pre> </li> </ol>"},{"location":"usage/gcp-secretmanager/#4-clean-up","title":"4. Clean up","text":""},{"location":"usage/gcp-secretmanager/#41-kubernetes-resources","title":"4.1. Kubernetes resources","text":"<p>Custom resources <pre><code>kubectl delete mysqldb sample-db\nkubectl delete mysqluser sample-user\nkubectl delete mysql $INSTANCE_NAME\n</code></pre></p> <p>Uninstall <code>mysql-operator</code></p> <pre><code>helm uninstall mysql-operator -n $NAMESPACE\n</code></pre>"},{"location":"usage/gcp-secretmanager/#42-gcp-resources","title":"4.2. GCP resources","text":"<pre><code>gcloud container clusters delete $GKE_CLUSTER_NAME --location $REGION\ngcloud sql instances delete ${INSTANCE_NAME} --project ${PROJECT}\ngcloud iam service-accounts delete ${SA_NAME}@${PROJECT}.iam.gserviceaccount.com --project ${PROJECT}\ngcloud secrets delete $SECRET_NAME --project ${PROJECT}\n</code></pre>"},{"location":"usage/install-with-helm/","title":"Install with Helm","text":""},{"location":"usage/install-with-helm/#1-preparation","title":"1. Preparation","text":"<pre><code>helm repo add nakamasato https://nakamasato.github.io/helm-charts\nhelm repo update\n</code></pre>"},{"location":"usage/install-with-helm/#2-install","title":"2. Install","text":""},{"location":"usage/install-with-helm/#21-install-without-gcp-secretmanager","title":"2.1. Install without GCP SecretManager","text":"<pre><code>helm install mysql-operator nakamasato/mysql-operator\n</code></pre>"},{"location":"usage/install-with-helm/#22-install-with-gcp-credentials-json","title":"2.2. Install with GCP credentials json","text":"<ol> <li> <p>Check the yaml to be applied with the <code>template</code> command</p> <pre><code>helm template mysql-operator nakamasato/mysql-operator --set adminUserSecretType=gcp --set gcpProjectId=$PROJECT_ID\n</code></pre> <p>Check point: - [ ] secret is mounted - [ ] env var <code>GOOGLE_APPLICATION_CREDENTIALS</code> is set - [ ] env var <code>PROJECT_ID</code> is set</p> </li> <li> <p>Install</p> <pre><code>helm install mysql-operator nakamasato/mysql-operator --set adminUserSecretType=gcp --set gcpProjectId=$PROJECT_ID --generate-name\n</code></pre> </li> </ol>"},{"location":"usage/install-with-helm/#23-install-without-gcp-credentials-json-eg-run-on-gcp-resource","title":"2.3. Install without GCP credentials json (e.g. Run on GCP resource)","text":"<pre><code>helm install mysql-operator ./charts/mysql-operator \\\n    --dry-run \\\n    --set adminUserSecretType=gcp \\\n    --set gcpServiceAccount=${SA_NAME}@${PROJECT}.iam.gserviceaccount.com \\\n    --set gcpProjectId=$PROJECT \\\n    --namespace mysql-operator\n</code></pre> <p>For more details, GCP SecretManager</p>"},{"location":"usage/install-with-helm/#3-upgrade","title":"3. Upgrade","text":"<p>When you want to modify helm release (start operator with new settings or arguments), you can upgrade an existing release.</p> <ol> <li>Get target release     <pre><code>helm list\n</code></pre></li> <li>Upgrade     <pre><code>helm upgrade mysql-operator nakamasato/mysql-operator --set adminUserSecretType=gcp --set gcpProjectId=$PROJECT_ID\n</code></pre></li> </ol>"},{"location":"usage/install-with-helm/#4-uninstall","title":"4. Uninstall","text":"<ol> <li>Check helm release to uninstall     <pre><code>helm list\nNAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                      APP VERSION\nmysql-operator  default         2               2023-04-08 12:38:58.65552 +0900 JST     deployed        mysql-operator-0.1.0       v0.2.0\n</code></pre></li> <li>Uninstall     <pre><code>helm uninstall mysql-operator\n</code></pre></li> </ol>"},{"location":"usage/schema-migration/","title":"Schema Migration","text":"<p>Schema migration feature uses https://github.com/golang-migrate/migrate but the supported feature in mysql-operator is limited. Currently, only GitHub source is supported.</p>"},{"location":"usage/schema-migration/#usage","title":"Usage","text":"<ol> <li> <p>Prepare schema files.     Example:     <pre><code>CREATE TABLE test_table (id int, name varchar(10));\n</code></pre></p> <pre><code>DROP TABLE test_table;\n</code></pre> <p>https://github.com/nakamasato/mysql-operator/tree/96dc1eeaf00c8afb42f1c9b63859ff57c440e584/config/sample-migrations</p> </li> <li> <p>Create MySQLDB yaml with <code>schemaMigrationFromGitHub</code></p> <pre><code>apiVersion: mysql.nakamasato.com/v1alpha1\nkind: MySQLDB\nmetadata:\n  labels:\n    app.kubernetes.io/name: mysqldb\n    app.kubernetes.io/instance: mysqldb-sample\n    app.kubernetes.io/part-of: mysql-operator\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: mysql-operator\n  name: sample-db # this is not a name for MySQL database but just a Kubernetes object name\nspec:\n  dbName: sample_db # this is MySQL database name\n  mysqlName: mysql-sample\n  schemaMigrationFromGitHub:\n    owner: nakamasato\n    repo: mysql-operator\n    path: config/sample-migrations\n    ref: 96dc1eeaf00c8afb42f1c9b63859ff57c440e584 # (optional) you can write branch, tag, sha\n</code></pre> <p>This configuration will generate <code>\"github://nakamasato/mysql-operator/config/sample-migrations#96dc1eeaf00c8afb42f1c9b63859ff57c440e584\"</code> as <code>sourceUrl</code> for source/github</p> </li> <li> <p>Run mysql &amp; mysql-operator</p> <pre><code>docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password --rm mysql:8\n</code></pre> <pre><code>make install run # to be updated with helm command\n</code></pre> </li> <li> <p>Create resources</p> <pre><code>kubectl apply -k config/samples\n</code></pre> </li> <li> <p>Check <code>test_table</code> is created.</p> <pre><code>docker exec -it $(docker ps | grep mysql | head -1 |awk '{print $1}') mysql -uroot -ppassword\n</code></pre> <pre><code>mysql&gt; use sample_db;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql&gt; show tables;\n+---------------------+\n| Tables_in_sample_db |\n+---------------------+\n| schema_migrations   |\n| test_table          |\n+---------------------+\n2 rows in set (0.00 sec)\n</code></pre> </li> <li> <p>Clean up</p> <pre><code>kubectl delete -k config/samples\n</code></pre> </li> </ol>"}]}